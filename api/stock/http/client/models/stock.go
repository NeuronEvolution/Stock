// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Stock Stock info
// swagger:model Stock
type Stock struct {

	// Exchange id
	// Required: true
	ExchangeID *string `json:"exchangeId"`

	// Stock id
	// Required: true
	StockID *string `json:"stockId"`
}

// Validate validates this stock
func (m *Stock) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExchangeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStockID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Stock) validateExchangeID(formats strfmt.Registry) error {

	if err := validate.Required("exchangeId", "body", m.ExchangeID); err != nil {
		return err
	}

	return nil
}

func (m *Stock) validateStockID(formats strfmt.Registry) error {

	if err := validate.Required("stockId", "body", m.StockID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Stock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Stock) UnmarshalBinary(b []byte) error {
	var res Stock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
